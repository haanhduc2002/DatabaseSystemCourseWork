--1.1
DROP TABLE A2ERROREVENT; 
/ 
CREATE TABLE A2ERROREVENT (
ERRORID INTEGER,
SOURCE_ROWID ROWID, 
SOURCE_TABLE VARCHAR2(30), 
ERRORCODE INTEGER,
FILTERID INTEGER, 
DATETIME DATE, 
ACTION VARCHAR2(6),
CONSTRAINT ERROREVENTACTION 
CHECK (ACTION IN ('SKIP','MODIFY'))
);
/ 
DROP SEQUENCE A2ERROREVENT_SEQ; 
CREATE SEQUENCE A2ERROREVENT_SEQ; 
/
DROP TABLE DWPROD;
DROP TABLE DWCUST;
DROP TABLE DWSALE;
/
CREATE TABLE DWPROD (
DWPRODID NUMBER PRIMARY KEY,
DWSOURCETABLE VARCHAR2(30),
DWSOURCEID NUMBER,
PRODNAME VARCHAR2(100),
PRODCATNAME VARCHAR2(50),
PRODMANUNAME VARCHAR2(30),
PRODSHIPNAME VARCHAR2(50)
);
/
CREATE TABLE DWCUST (
DWCUSTID NUMBER PRIMARY KEY,
DWSOURCEIDBRIS NUMBER,
DWSOURCEIDMELB NUMBER,
FIRSTNAME VARCHAR2(30),
SURNAME VARCHAR2(30),
GENDER VARCHAR2(1),
PHONE NUMBER,
POSTCODE NUMBER,
CITY VARCHAR2(50),
STATE VARCHAR2(10),
CUSTCATNAME VARCHAR2 (30)
);
/
CREATE TABLE DWSALE (
DWSALEID NUMBER PRIMARY KEY,
DWCUSTID NUMBER,
DWPRODID NUMBER,
DWSOURCEIDBRIS NUMBER,
DWSOURCEIDMELB NUMBER,
QTY NUMBER,
SALE_DWDATEID NUMBER,
SHIP_DWDATEID NUMBER,
SALEPRICE NUMBER
);
/
DROP SEQUENCE DWPROD_SEQ;
CREATE SEQUENCE DWPROD_SEQ;
DROP SEQUENCE DWCUST_SEQ;
CREATE SEQUENCE DWCUST_SEQ;
DROP SEQUENCE DWSALE_SEQ;
CREATE SEQUENCE DWSALE_SEQ;
/
DROP TABLE GENDERSPELLING;
/
CREATE TABLE GENDERSPELLING (
    INVALIDVAL VARCHAR2(30),
    NEWVAL VARCHAR2(1)
);
/
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('MAIL', 'M');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('WOMEN', 'F');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('FEM', 'F');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('FEMALE', 'F');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('MALE', 'M');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('GENTLEMAN', 'M');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('MM', 'M');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('FF', 'F');
INSERT INTO GENDERSPELLING (INVALIDVAL, NEWVAL) VALUES ('FEMAIL', 'F');
/
--part 2
--2.1
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL, ROWID, 'A2PRODUCT', 107, 1, SYSDATE, 'SKIP'
FROM A2PRODUCT p
WHERE p.PRODNAME IS NULL;
COMMIT;
/
--2.2
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL, ROWID, 'A2PRODUCT', 135, 2, SYSDATE, 'MODIFY'
FROM A2PRODUCT p
WHERE p.MANUFACTURERCODE IS NULL;
COMMIT;
/
--2.3
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL, ROWID, 'A2PRODUCT', 141, 3, SYSDATE, 'MODIFY'
FROM A2PRODUCT p
WHERE p.PRODCATEGORY IS NULL OR p.PRODCATEGORY NOT IN (
    SELECT c.PRODUCTCATEGORY
    FROM A2PRODCATEGORY c
);
COMMIT;
/
--2.4.3
INSERT INTO DWPROD 
SELECT SEQ_DWPROD.NEXTVAL, 'A2PRODUCT', PRODID, PRODNAME, CATEGORYNAME, MANUNAME, DESCRIPTION 
FROM A2PRODUCT P 
NATURAL JOIN A2MANUFACTURER M, A2SHIPPING S, A2PRODCATEGORY PC 
WHERE P.ROWID NOT IN (SELECT EE.SOURCE_ROWID FROM A2ERROREVENT EE) 
AND M.MANUCODE = P.MANUFACTURERCODE 
AND PC.PRODUCTCATEGORY = P.PRODCATEGORY 
AND S.SHIPPINGCODE = P.SHIPPINGCODE; 
COMMIT; 
/--2.4.4
INSERT INTO DWPROD (DWPRODID, DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, 
PRODSHIPNAME)
SELECT DWPROD_SEQ.NEXTVAL, 'A2PRODUCT', P.PRODID, P.PRODNAME, PC.CATEGORYNAME, 'UNKNOWN', S.DESCRIPTION
FROM A2PRODUCT P 
NATURAL JOIN A2PRODCATEGORY PC, A2SHIPPING S 
WHERE P.ROWID IN (SELECT EE.SOURCE_ROWID 
FROM A2ERROREVENT EE 
WHERE EE.FILTERID = 2 ) 
AND PC.PRODUCTCATEGORY = P.PRODCATEGORY 
AND S.SHIPPINGCODE = P.SHIPPINGCODE; 
COMMIT;
/--2.4.5
INSERT INTO DWPROD (DWPRODID, DWSOURCETABLE, DWSOURCEID, PRODNAME, PRODCATNAME, PRODMANUNAME, 
PRODSHIPNAME)
SELECT DWPROD_SEQ.NEXTVAL AS DWPRODID, 'A2PRODUCT', P.PRODID, P.PRODNAME, 'UNKNOWN', M.MANUNAME, S.DESCRIPTION
FROM A2PRODUCT P
NATURAL JOIN A2MANUFACTURER M, A2SHIPPING S 
WHERE P.ROWID IN (SELECT EE.SOURCE_ROWID 
FROM A2ERROREVENT EE 
WHERE EE.FILTERID = 3 ) AND M.MANUCODE = P.MANUFACTURERCODE 
AND S.SHIPPINGCODE = P.SHIPPINGCODE; 
COMMIT; 
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2CUSTBRIS', 163, 4, SYSDATE, 'MODIFY' 
FROM A2CUSTBRIS b
WHERE b.CUSTCATCODE IS NULL 
OR b.CUSTCATCODE NOT IN (
    SELECT c.CUSTCATCODE 
    FROM A2CUSTCATEGORY c
);
COMMIT;
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2CUSTBRIS', 199, 5, SYSDATE, 'MODIFY' 
FROM A2CUSTBRIS b
WHERE b.PHONE LIKE '% %' OR b.PHONE LIKE '%-%';
COMMIT;
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2CUSTBRIS', 204, 6, SYSDATE, 'SKIP' 
FROM A2CUSTBRIS b
WHERE LENGTH( b.PHONE ) != 10 
AND b.PHONE NOT LIKE '% %' 
AND b.PHONE NOT LIKE '%-%';
COMMIT;
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL , ROWID, 'A2CUSTBRIS', 237, 7, SYSDATE, 'MODIFY' 
FROM A2CUSTBRIS b
WHERE (UPPER(b.GENDER) NOT LIKE 'M' 
AND UPPER(b.GENDER) NOT LIKE 'F')
OR b.GENDER IS NULL;
COMMIT;
/
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL AS DWCUSTID, A2CUSTBRIS.CUSTID, A2CUSTBRIS.FNAME, A2CUSTBRIS.SNAME, UPPER (A2CUSTBRIS.GENDER), A2CUSTBRIS.PHONE, A2CUSTBRIS.POSTCODE, A2CUSTBRIS.CITY, A2CUSTBRIS.STATE, A2CUSTCATEGORY.CUSTCATNAME
FROM A2CUSTBRIS
INNER JOIN A2CUSTCATEGORY ON A2CUSTBRIS.CUSTCATCODE = A2CUSTCATEGORY.CUSTCATCODE
WHERE A2CUSTBRIS.ROWID NOT IN (
    SELECT e.SOURCE_ROWID 
    FROM A2ERROREVENT e
);
COMMIT;
/
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL AS DWCUSTID, A2CUSTBRIS.CUSTID, A2CUSTBRIS.FNAME, A2CUSTBRIS.SNAME, UPPER (A2CUSTBRIS.GENDER), REGEXP_REPLACE(A2CUSTBRIS.PHONE, '-| ', null), A2CUSTBRIS.POSTCODE, A2CUSTBRIS.CITY, A2CUSTBRIS.STATE, 'UNKNOWN'
FROM A2CUSTBRIS
WHERE A2CUSTBRIS.ROWID IN (
    SELECT e.SOURCE_ROWID 
    FROM A2ERROREVENT e 
    WHERE e.FILTERID = 4
);
COMMIT;
/
INSERT INTO DWCUST (DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
SELECT DWCUST_SEQ.NEXTVAL AS DWCUSTID, A2CUSTBRIS.CUSTID, A2CUSTBRIS.FNAME, A2CUSTBRIS.SNAME, UPPER (A2CUSTBRIS.GENDER), REGEXP_REPLACE( A2CUSTBRIS.PHONE, '-| ', null  ), A2CUSTBRIS.POSTCODE, A2CUSTBRIS.CITY, A2CUSTBRIS.STATE, 'UNKNOWN'
FROM A2CUSTBRIS
WHERE A2CUSTBRIS.ROWID IN (
    SELECT e.SOURCE_ROWID 
    FROM A2ERROREVENT e 
    WHERE e.FILTERID = 5
);
COMMIT;
/
INSERT INTO DWCUST(DWCUSTID, DWSOURCEIDBRIS, FIRSTNAME, SURNAME, GENDER, PHONE, 
POSTCODE, CITY, STATE, CUSTCATNAME) 
 SELECT DWCUST_SEQ.NEXTVAL, CUSTID, FNAME, SNAME, 
 CASE WHEN UPPER(CB.GENDER) IN (SELECT INVALIDVAL
FROM GENDERSPELLING) 
 THEN (SELECT NEWVAL FROM GENDERSPELLING GS WHERE UPPER(CB.GENDER) = GS.INVALIDVAL) 
 ELSE 'U' 
 END, 
 PHONE, POSTCODE, CITY, CB.STATE, CUSTCATNAME 
 FROM A2CUSTBRIS CB 
 NATURAL JOIN A2CUSTCATEGORY CC 
 WHERE CB.ROWID IN (SELECT EE.SOURCE_ROWID 
 FROM A2ERROREVENT EE 
 WHERE EE.FILTERID = 7); 
 COMMIT; 
/
MERGE INTO DWCUST DC
USING (
    SELECT * FROM A2CUSTMELB A2CM 
    INNER JOIN A2CUSTCATEGORY A2CC 
    ON A2CM.CUSTCATCODE=A2CC.CUSTCATCODE
) CM
ON (
    DC.FIRSTNAME=CM.FNAME 
    AND DC.SURNAME=CM.SNAME 
    AND DC.POSTCODE=CM.POSTCODE
)
WHEN MATCHED THEN
UPDATE SET DC.DWSOURCEIDMELB=CM.CUSTID
WHEN NOT MATCHED THEN 
INSERT (DWCUSTID, DWSOURCEIDMELB, FIRSTNAME, SURNAME, GENDER, PHONE, POSTCODE, CITY, STATE, CUSTCATNAME)
VALUES(DWCUST_SEQ.NEXTVAL, CM.CUSTID, CM.FNAME, CM.SNAME, UPPER(CM.GENDER), CM.PHONE, CM.POSTCODE, CM.CITY, CM.STATE, CM.CUSTCATNAME);
COMMIT;
/--task 5.1
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL , ROWID, 'A2SALEBRIS', 248, 8, SYSDATE, 'SKIP'
FROM A2SALEBRIS SB
WHERE SB.PRODID NOT IN (
    SELECT DWSOURCEID 
    FROM DWPROD
) OR SB.PRODID IS NULL;  
COMMIT;
/--task 5.2
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL , ROWID, 'A2SALEBRIS', 266, 9, SYSDATE, 'SKIP'
FROM A2SALEBRIS
WHERE NOT EXISTS (
    SELECT NULL FROM DWCUST  
    WHERE A2SALEBRIS.CUSTID = DWCUST.DWSOURCEIDBRIS
);  
COMMIT;
/--5.3
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL , ROWID, 'A2SALEBRIS', 293, 10, SYSDATE, 'MODIFY'
FROM A2SALEBRIS
WHERE SALEDATE > SHIPDATE;
COMMIT;
/--5.4
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL , ROWID, 'A2SALEBRIS', 318, 11, SYSDATE, 'MODIFY'
FROM A2SALEBRIS
WHERE UNITPRICE IS NULL;
COMMIT;
/--5.5
INSERT INTO DWSALE(DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDBRIS, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT DWSALE_SEQ.NEXTVAL,(
    SELECT DWCUSTID FROM DWCUST 
    WHERE DWSOURCEIDMELB= CUSTID
), (
    SELECT DWPRODID FROM DWPROD 
    WHERE DWSOURCEID=PRODID
), SALEID, QTY, (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE= SALEDATE
), (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE=SHIPDATE
), UNITPRICE
FROM A2SALEBRIS        
WHERE ROWID NOT IN (
    SELECT SOURCE_ROWID 
    FROM A2ERROREVENT);
COMMIT;
/
INSERT INTO DWSALE(DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDBRIS, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT DWSALE_SEQ.NEXTVAL, (
    SELECT DWCUSTID FROM DWCUST 
    WHERE DWSOURCEIDBRIS = SB.CUSTID
), (
    SELECT DWPRODID FROM DWPROD 
    WHERE DWSOURCEID = SB.PRODID
), SB.SALEID, SB.QTY, (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SB.SALEDATE
), (
    (SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SB.SALEDATE)+2
), SB.UNITPRICE 
FROM A2SALEBRIS SB 
WHERE ROWID IN (
    SELECT SOURCE_ROWID 
    FROM A2ERROREVENT 
    WHERE FILTERID = 10); 
COMMIT; 
/
INSERT INTO DWSALE(DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDBRIS, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT DWSALE_SEQ.NEXTVAL, (
    SELECT DWCUSTID FROM DWCUST 
    WHERE SB.CUSTID = DWSOURCEIDBRIS
), (
    SELECT DWPRODID FROM DWPROD 
    WHERE DWSOURCEID = SB.PRODID
), SB.SALEID, SB.QTY, (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SB.SALEDATE
), (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SB.SHIPDATE
), (
    SELECT MAX(UNITPRICE) FROM A2SALEBRIS 
    WHERE PRODID = DP.DWSOURCEID) 
FROM A2SALEBRIS SB 
INNER JOIN DWPROD DP ON SB.PRODID = DP.DWSOURCEID 
WHERE SB.ROWID IN (
    SELECT SOURCE_ROWID FROM A2ERROREVENT 
    WHERE FILTERID = 11); 
COMMIT; 
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2SALEMELB', 322, 12, SYSDATE, 'SKIP'
FROM A2SALEMELB SM 
WHERE SM.PRODID NOT IN (
    SELECT DWSOURCEID FROM DWPROD
) OR SM.PRODID IS NULL; 
COMMIT;
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2SALEMELB', 350, 13, SYSDATE, 'SKIP'
FROM A2SALEMELB 
WHERE NOT EXISTS (
    SELECT NULL FROM DWCUST 
    WHERE A2SALEMELB.CUSTID=DWCUST.DWSOURCEIDMELB
); 
COMMIT;
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2SALEMELB', 365, 14, SYSDATE, 'MODIFY'
FROM A2SALEMELB SM 
WHERE SHIPDATE < SALEDATE; 
COMMIT; 
/
INSERT INTO A2ERROREVENT (ERRORID, SOURCE_ROWID, SOURCE_TABLE, ERRORCODE, FILTERID, DATETIME, ACTION)
SELECT A2ERROREVENT_SEQ.NEXTVAL AS ERRORID, ROWID, 'A2SALEMELB', 396, 15, SYSDATE, 'MODIFY'
FROM A2SALEMELB SM 
WHERE UNITPRICE IS NULL; 
COMMIT;
/
INSERT INTO DWSALE(DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDMELB, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT DWSALE_SEQ.NEXTVAL, (
    SELECT DWCUSTID FROM DWCUST 
    WHERE DWSOURCEIDMELB = SM.CUSTID
), (
    SELECT DWPRODID FROM DWPROD 
    WHERE DWSOURCEID = SM.PRODID
), SM.SALEID, SM.QTY, (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SM.SALEDATE
), (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SM.SHIPDATE
), SM.UNITPRICE 
FROM A2SALEMELB SM 
WHERE ROWID NOT IN (
    SELECT SOURCE_ROWID 
    FROM A2ERROREVENT); 
COMMIT; 
/
INSERT INTO DWSALE(DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDMELB, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT DWSALE_SEQ.NEXTVAL, (
    SELECT DWCUSTID FROM DWCUST 
    WHERE DWSOURCEIDMELB = SM.CUSTID
), (
    SELECT DWPRODID FROM DWPROD 
    WHERE DWSOURCEID = SM.PRODID
), SM.SALEID, SM.QTY, (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SM.SALEDATE
), (
    (SELECT DATEKEY FROM DWDATE WHERE DATEVALUE = SM.SALEDATE)+2
), SM.UNITPRICE 
FROM A2SALEMELB SM 
WHERE ROWID IN (
    SELECT SOURCE_ROWID FROM A2ERROREVENT 
    WHERE FILTERID = 14); 
COMMIT;
/
INSERT INTO DWSALE(DWSALEID, DWCUSTID, DWPRODID, DWSOURCEIDMELB, QTY, SALE_DWDATEID, SHIP_DWDATEID, SALEPRICE)
SELECT DWSALE_SEQ.NEXTVAL, (
    SELECT DWCUSTID FROM DWCUST 
    WHERE DWSOURCEIDMELB = SM.CUSTID
), (
    SELECT DWPRODID FROM DWPROD 
    WHERE DWSOURCEID = SM.PRODID
), SM.SALEID, SM.QTY, (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SM.SALEDATE
), (
    SELECT DATEKEY FROM DWDATE 
    WHERE DATEVALUE = SM.SHIPDATE
), (
    SELECT MAX(UNITPRICE) FROM A2SALEMELB WHERE PRODID = DP.DWSOURCEID
) 
FROM A2SALEMELB SM 
INNER JOIN DWPROD DP ON SM.PRODID = DP.DWSOURCEID
WHERE SM.ROWID IN (
    SELECT SOURCE_ROWID FROM A2ERROREVENT 
    WHERE FILTERID = 15
); 
COMMIT;
/
DELETE FROM DWSALE DS 
WHERE DS.DWSOURCEIDMELB IN (
    SELECT SALEID 
    FROM A2SALEMELB SM 
    WHERE SM.ROWID IN (SELECT SOURCE_ROWID 
    FROM A2ERROREVENT 
    WHERE SOURCE_TABLE = 'A2SALEMELB' 
    GROUP BY SOURCE_ROWID HAVING COUNT(SOURCE_ROWID)>1)
); 
COMMIT;